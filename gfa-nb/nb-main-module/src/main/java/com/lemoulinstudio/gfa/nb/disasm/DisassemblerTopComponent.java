package com.lemoulinstudio.gfa.nb.disasm;

import com.lemoulinstudio.gfa.nb.GfaContext;
import com.lemoulinstudio.gfa.nb.filetype.rom.RomDataObject;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JViewport;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
//import org.openide.util.Utilities;

/**
 * Top component which displays something.
 */
final class DisassemblerTopComponent extends TopComponent {

  private static class MemoryBank {
    public int id;
    public String name;

    public MemoryBank(int id, String name) {
      this.id = id;
      this.name = name;
    }

    @Override
    public String toString() {
      return name;
    }

  }

  private static DisassemblerTopComponent instance;
  /** path to the icon used by the component and its open action */
//    static final String ICON_PATH = "SET/PATH/TO/ICON/HERE";
  private static final String PREFERRED_ID = "DisassemblerTopComponent";

  private DisassemblerTableModel tableModel;
  private ComboBoxModel memoryBankComboBoxModel;
  private ComboBoxModel executionTrackingComboBoxModel;
  private ExecutionTracking executionTracking;
  private Lookup.Result romDataObjectResult;

  private DisassemblerTopComponent() {
    tableModel = new DisassemblerTableModel();

    memoryBankComboBoxModel = new DefaultComboBoxModel(new MemoryBank[] {
      new MemoryBank(0x00, "Bios Rom"),
      new MemoryBank(0x02, "External Ram"),
      new MemoryBank(0x03, "Work Ram"),
      new MemoryBank(0x04, "IO Registers"),
      new MemoryBank(0x05, "Palette Ram"),
      new MemoryBank(0x06, "Video Ram"),
      new MemoryBank(0x07, "OAM Ram"),
      new MemoryBank(0x08, "Gamepak Rom"),
      new MemoryBank(0x0e, "Cart Ram")
    });

    executionTrackingComboBoxModel = new DefaultComboBoxModel(ExecutionTracking.values());
    executionTracking = ExecutionTracking.None;

    romDataObjectResult = GfaContext.lookup.lookupResult(RomDataObject.class);

    onEvent(GfaContext.lookup.lookup(RomDataObject.class));
    
    romDataObjectResult.addLookupListener(new LookupListener() {
      public void resultChanged(LookupEvent ev) {
        onEvent(GfaContext.lookup.lookup(RomDataObject.class));
      }
    });

    initComponents();

    memoryBankComboBox.setSelectedIndex(8);
    setName(NbBundle.getMessage(DisassemblerTopComponent.class, "CTL_DisassemblerTopComponent"));
//        setIcon(Utilities.loadImage(ICON_PATH, true));

  }

  private void onEvent(RomDataObject dataObject) {
    if (dataObject == null) tableModel.setGfaDevice(null);
    else tableModel.setGfaDevice(dataObject.getGfaDevice());
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    jScrollPane1.getViewport().setScrollMode(JViewport.SIMPLE_SCROLL_MODE);
    jTable1 = new javax.swing.JTable();
    memoryBankComboBox = new javax.swing.JComboBox();
    executionTrackingComboBox = new javax.swing.JComboBox();
    javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
    javax.swing.JLabel jLabel2 = new javax.swing.JLabel();

    jTable1.setModel(tableModel);
    jTable1.setSelectionBackground(java.awt.Color.pink);
    jScrollPane1.setViewportView(jTable1);

    memoryBankComboBox.setModel(memoryBankComboBoxModel);
    memoryBankComboBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        memoryBankComboBoxActionPerformed(evt);
      }
    });

    executionTrackingComboBox.setModel(executionTrackingComboBoxModel);
    executionTrackingComboBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        executionTrackingComboBoxActionPerformed(evt);
      }
    });

    org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DisassemblerTopComponent.class, "DisassemblerTopComponent.jLabel1.text")); // NOI18N

    org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(DisassemblerTopComponent.class, "DisassemblerTopComponent.jLabel2.text")); // NOI18N

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(memoryBankComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(jLabel2)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(executionTrackingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(memoryBankComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel2)
          .addComponent(executionTrackingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents

  private void memoryBankComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memoryBankComboBoxActionPerformed
    tableModel.setMemorySetViewed(((MemoryBank) memoryBankComboBoxModel.getSelectedItem()).id);
  }//GEN-LAST:event_memoryBankComboBoxActionPerformed

  private void executionTrackingComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executionTrackingComboBoxActionPerformed
    executionTracking = (ExecutionTracking) executionTrackingComboBoxModel.getSelectedItem();
  }//GEN-LAST:event_executionTrackingComboBoxActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JComboBox executionTrackingComboBox;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTable jTable1;
  private javax.swing.JComboBox memoryBankComboBox;
  // End of variables declaration//GEN-END:variables
  /**
   * Gets default instance. Do not use directly: reserved for *.settings files only,
   * i.e. deserialization routines; otherwise you could get a non-deserialized instance.
   * To obtain the singleton instance, use {@link #findInstance}.
   */
  public static synchronized DisassemblerTopComponent getDefault() {
    if (instance == null) {
      instance = new DisassemblerTopComponent();
    }
    return instance;
  }

  /**
   * Obtain the DisassemblerTopComponent instance. Never call {@link #getDefault} directly!
   */
  public static synchronized DisassemblerTopComponent findInstance() {
    TopComponent win = WindowManager.getDefault().findTopComponent(PREFERRED_ID);
    if (win == null) {
      Logger.getLogger(DisassemblerTopComponent.class.getName()).warning(
              "Cannot find " + PREFERRED_ID + " component. It will not be located properly in the window system.");
      return getDefault();
    }
    if (win instanceof DisassemblerTopComponent) {
      return (DisassemblerTopComponent) win;
    }
    Logger.getLogger(DisassemblerTopComponent.class.getName()).warning(
            "There seem to be multiple components with the '" + PREFERRED_ID
            + "' ID. That is a potential source of errors and unexpected behavior.");
    return getDefault();
  }

  @Override
  public int getPersistenceType() {
    return TopComponent.PERSISTENCE_NEVER;
  }

  @Override
  public void componentOpened() {
    // TODO add custom code on component opening
  }

  @Override
  public void componentClosed() {
    // TODO add custom code on component closing
  }

  @Override
  protected String preferredID() {
    return PREFERRED_ID;
  }

}
